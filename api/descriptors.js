// более подробно можно ознакомиться по ссылке 
// https://learn.javascript.ru/descriptors-getters-setters

// :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

Object.defineProperty(obj, prop, descriptor)
// позволяет объявить свойство объекта и, что самое главное, тонко 
// настроить его особые аспекты, которые никак иначе не изменить.

	obj
	// Объект, в котором объявляется свойство.
	
	prop
	// Имя свойства, которое нужно объявить или модифицировать.
	
	descriptor
	// Дескриптор – объект, который описывает поведение свойства.
	// В нём могут быть следующие поля:

		value
		// значение свойства, по умолчанию undefined
		
		writable
		// значение свойства можно менять, если true. По умолчанию 
		// false.
		
		configurable
		// если true, то свойство можно удалять, а также менять его 
		// в дальнейшем при помощи новых вызовов defineProperty. 
		// По умолчанию false.
		
		enumerable
		// если true, то свойство просматривается в цикле for..in 
		// и методе Object.keys(). По умолчанию false.
		
		get
		// функция, которая возвращает значение свойства. По 
		// умолчанию undefined.
		
		set
		// функция, которая записывает значение свойства. По умолчанию 
		// undefined.

// Чтобы избежать конфликта, запрещено одновременно указывать значение 
// value и функции get/set. Либо значение, либо функции для его 
// чтения-записи, одно из двух. Также запрещено и не имеет смысла 
// указывать writable при наличии get/set-функций.



Object.defineProperties(obj, descriptors)
// Позволяет объявить несколько свойств сразу


Object.keys(obj)
// возвращает массив – список свойств объекта
//  возвращает только enumerable-свойства


Object.getOwnPropertyNames(obj)
// возвращает массив – список свойств объекта
// возвращает все


Object.getOwnPropertyDescriptor(obj, prop)
// Возвращает дескриптор для свойства obj[prop].
// Полученный дескриптор можно изменить и использовать defineProperty 
// для сохранения изменений


Object.preventExtensions(obj)
// Запрещает добавление свойств в объект.


Object.seal(obj)
// Запрещает добавление и удаление свойств, все текущие свойства 
// делает configurable: false.


Object.freeze(obj)
// Запрещает добавление, удаление и изменение свойств, все текущие 
// свойства делает configurable: false, writable: false.


Object.isExtensible(obj)
// Возвращает false, если добавление свойств объекта было запрещено 
// вызовом метода Object.preventExtensions.


Object.isSealed(obj)
// Возвращает true, если добавление и удаление свойств объекта 
// запрещено, и все текущие свойства являются configurable: false.

Object.isFrozen(obj)
// Возвращает true, если добавление, удаление и изменение свойств 
// объекта запрещено, и все текущие свойства являются 
// configurable: false, writable: false