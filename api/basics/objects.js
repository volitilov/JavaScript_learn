// более подробно можно ознакомиться по ссылке 
// https://learn.javascript.ru/object
// https://learn.javascript.ru/object-for-in
// https://learn.javascript.ru/object-reference

// :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

var obj = new Object() 
var obj = {}
// создание нового объекта

obj.name = 'ex'
// присвоение свойства name объекту

obj.name
// получение свойства name объекта

delete obj.name
// удаление свойства объекта

obj.name === undefined
// true, свойства нет
// false, свойство есть

obj['name']
// o['name'] и o.name идентичны, но квадратные скобки позволяют 
// использовать в качестве имени свойства любую строку




var obj = {
	str: 'str',
	num: 123,
	bool: true,
	obj: {},
	mas: [],

	// создание метод объекта
	func: function() {

		// с помошью this получения внутренних свойств объекта
		return this.str;
	}

	valueOf: function() { return this.num; },
	toString: function() { return this.num; }
	// используются для преобразования вывода, при
	// непосредственном обращении к объекту 
}
// Названия свойств можно перечислять как в кавычках, так и без, 
// если они удовлетворяют ограничениям для имён переменных




for (var key in obj) {
  /* ... делать что-то с obj[key] ... */
}
// для перебора всех свойств из объекта используется цикл по 
// свойствам for..in




var mas = Object.keys(obj)
// Если мы хотим работать с ними в виде массива, то к нашим 
// услугам – замечательный метод Object.keys(obj). Он 
// поддерживается везде, кроме IE8